-- MySQL Script generated by MySQL Workbench
-- Thu Mar 21 13:51:23 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema database
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema database
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `database` DEFAULT CHARACTER SET utf8 ;
USE `database` ;

-- -----------------------------------------------------
-- Table `database`.`assigments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`assigments` (
  `assigmentid` INT NOT NULL,
  `content` VARCHAR(10000) NULL,
  `available_from` TIMESTAMP NULL,
  `available_to` TIMESTAMP NULL,
  `extenstions` VARCHAR(100) NULL,
  `rename` VARCHAR(50) NULL,
  `course` INT NOT NULL,
  PRIMARY KEY (`assigmentid`, `course`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`attends`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`attends` (
  `user` INT NOT NULL,
  `course` INT NOT NULL,
  PRIMARY KEY (`user`, `course`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`class_settings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`class_settings` (
  `csetid` INT NOT NULL AUTO_INCREMENT,
  `default_assigment` INT NOT NULL,
  `default_grading` INT NOT NULL,
  PRIMARY KEY (`csetid`, `default_assigment`, `default_grading`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`comments` (
  `commentid` INT NOT NULL AUTO_INCREMENT,
  `content` VARCHAR(2000) NULL,
  `postDate` TIMESTAMP NULL,
  `post` INT NOT NULL,
  `user` INT NOT NULL,
  PRIMARY KEY (`commentid`, `post`, `user`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`courses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`courses` (
  `courseid` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(128) NULL,
  `token` VARCHAR(7) NULL,
  `isPublic` TINYINT NULL,
  `modified` TIMESTAMP NULL,
  `status` ENUM('OPEN', 'CLOSED', 'ARCHIVED') NULL,
  `settings` INT NOT NULL,
  PRIMARY KEY (`courseid`, `settings`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`grades`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`grades` (
  `gradeid` INT NOT NULL AUTO_INCREMENT,
  `grade` INT NULL,
  `comment` VARCHAR(500) NULL,
  `grading` INT NOT NULL,
  `user` INT NOT NULL,
  PRIMARY KEY (`gradeid`, `user`, `grading`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`gradings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`gradings` (
  `gradingid` INT NOT NULL,
  `title` VARCHAR(200) NULL,
  `min` INT NULL,
  `max` INT NULL,
  `gradingDate` TIMESTAMP NULL,
  `course` INT NOT NULL,
  PRIMARY KEY (`gradingid`, `course`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`languages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`languages` (
  `langid` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(40) NULL,
  `file` VARCHAR(3) NULL,
  PRIMARY KEY (`langid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`material_files`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`material_files` (
  `material_file_id` INT NOT NULL AUTO_INCREMENT,
  `file_path` VARCHAR(100) NULL,
  `title` VARCHAR(100) NULL,
  `material` INT NOT NULL,
  PRIMARY KEY (`material_file_id`, `material`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`material_shared`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`material_shared` (
  `material` INT NOT NULL,
  `course` INT NOT NULL,
  PRIMARY KEY (`material`, `course`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`materials`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`materials` (
  `materialid` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(128) NULL,
  `content` VARCHAR(10000) NULL,
  `available_from` TIMESTAMP NULL,
  `available_to` TIMESTAMP NULL,
  `author` INT NOT NULL,
  PRIMARY KEY (`materialid`, `author`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`posts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`posts` (
  `postid` INT NOT NULL AUTO_INCREMENT,
  `content` VARCHAR(45) NULL,
  `postDate` TIMESTAMP NULL,
  `course` INT NOT NULL,
  `user` INT NOT NULL,
  PRIMARY KEY (`postid`, `course`, `user`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`roles` (
  `roleid` INT NOT NULL,
  `title` VARCHAR(40) NULL,
  PRIMARY KEY (`roleid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`teaches`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`teaches` (
  `user` INT NOT NULL,
  `course` INT NOT NULL,
  PRIMARY KEY (`user`, `course`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`themes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`themes` (
  `themeid` INT NOT NULL,
  `title` VARCHAR(40) NULL,
  `file` VARCHAR(10) NULL,
  PRIMARY KEY (`themeid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`user_role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`user_role` (
  `users_userid` INT NOT NULL,
  `roles_roleid` INT NOT NULL,
  PRIMARY KEY (`users_userid`, `roles_roleid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`user_settings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`user_settings` (
  `usetid` INT NOT NULL AUTO_INCREMENT,
  `language` INT NOT NULL,
  `theme` INT NOT NULL,
  PRIMARY KEY (`usetid`, `language`, `theme`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`users` (
  `userid` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(128) NULL,
  `password` VARCHAR(128) NULL,
  `email` VARCHAR(128) NULL,
  `name` VARCHAR(128) NULL,
  `regDate` TIMESTAMP NULL,
  `settings` INT NOT NULL,
  PRIMARY KEY (`userid`, `settings`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`votes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`votes` (
  `user` INT NOT NULL,
  `option` INT NOT NULL,
  PRIMARY KEY (`user`, `option`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`voting`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`voting` (
  `voting_id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NULL,
  `description` VARCHAR(2000) NULL,
  `can_add_custom` TINYINT NULL,
  `available_from` TIMESTAMP NULL,
  `available_to` TIMESTAMP NULL,
  `multiple` TINYINT NULL,
  `anonymous` TINYINT NULL,
  `result` ENUM("ALWAYS", "AFTER", "NEVER") NULL,
  `course` INT NOT NULL,
  PRIMARY KEY (`voting_id`, `course`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `database`.`voting_options`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `database`.`voting_options` (
  `voting_opt_id` INT NOT NULL,
  `title` VARCHAR(128) NULL,
  `voting` INT NOT NULL,
  PRIMARY KEY (`voting_opt_id`, `voting`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `database`.`languages`
-- -----------------------------------------------------
START TRANSACTION;
USE `database`;
INSERT INTO `database`.`languages` (`langid`, `title`, `file`) VALUES (1, 'English', 'ENG');
INSERT INTO `database`.`languages` (`langid`, `title`, `file`) VALUES (2, 'Hungarian', 'HUN');

COMMIT;


-- -----------------------------------------------------
-- Data for table `database`.`themes`
-- -----------------------------------------------------
START TRANSACTION;
USE `database`;
INSERT INTO `database`.`themes` (`themeid`, `title`, `file`) VALUES (1, 'Light', 'light');
INSERT INTO `database`.`themes` (`themeid`, `title`, `file`) VALUES (2, 'Dark', 'dark');

COMMIT;

